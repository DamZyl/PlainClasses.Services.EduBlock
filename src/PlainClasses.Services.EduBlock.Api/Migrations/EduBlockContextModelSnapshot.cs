// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PlainClasses.Services.EduBlock.Infrastructure.Sql;

namespace PlainClasses.Services.EduBlock.Api.Migrations
{
    [DbContext(typeof(EduBlockContext))]
    partial class EduBlockContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("PlainClasses.Services.EduBlock.Domain.Models.EduBlock", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("EduBlockSubjectId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("EduBlockSubjectName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EndEduBlock")
                        .HasColumnType("datetime2");

                    b.Property<int>("Place")
                        .HasColumnType("int");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("StartEduBlock")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("EduBlockSubjectId");

                    b.ToTable("EduBlocks");
                });

            modelBuilder.Entity("PlainClasses.Services.EduBlock.Domain.Models.EduBlockSubject", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("EduBlockSubjects");
                });

            modelBuilder.Entity("PlainClasses.Services.EduBlock.Domain.Models.PersonFunction", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("EduBlockId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Function")
                        .HasColumnType("int");

                    b.Property<Guid>("PersonId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("EduBlockId");

                    b.ToTable("PersonFunctions");
                });

            modelBuilder.Entity("PlainClasses.Services.EduBlock.Domain.Models.PlatoonInEduBlock", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("EduBlockId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("PlatoonId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("EduBlockId");

                    b.ToTable("PlatoonInEduBlocks");
                });

            modelBuilder.Entity("PlainClasses.Services.EduBlock.Domain.Models.EduBlock", b =>
                {
                    b.HasOne("PlainClasses.Services.EduBlock.Domain.Models.EduBlockSubject", "EduBlockSubject")
                        .WithMany("EduBlocks")
                        .HasForeignKey("EduBlockSubjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PlainClasses.Services.EduBlock.Domain.Models.PersonFunction", b =>
                {
                    b.HasOne("PlainClasses.Services.EduBlock.Domain.Models.EduBlock", "EduBlock")
                        .WithMany("PersonFunctions")
                        .HasForeignKey("EduBlockId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PlainClasses.Services.EduBlock.Domain.Models.PlatoonInEduBlock", b =>
                {
                    b.HasOne("PlainClasses.Services.EduBlock.Domain.Models.EduBlock", "EduBlock")
                        .WithMany("Platoons")
                        .HasForeignKey("EduBlockId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
